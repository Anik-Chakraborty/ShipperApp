name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Create .env file
        run: |
          echo "shipperApiUrl=${{ vars.SHIPPER_API_URL_PROD }}" > .env
          echo "paymentkey=${{ vars.PAYMENT_KEY_PROD }}" > .env
          echo "paymentkeysecret=${{ vars.PAYMENT_KEY_SECRET_PROD }}" >> .env
          echo "loadApiUrl=${{ vars.LOAD_API_URL_PROD }}" >> .env
          echo "transporterApiUrl=${{ vars.TRANSPORTER_API_URL_PROD }}" >> .env
          echo "documentApiUrl=${{ vars.DOCUMENT_API_URL_PROD }}" >> .env
          echo "driverApiUrl=${{ vars.DRIVER_API_URL_PROD }}" >> .env
          echo "biddingApiUrl=${{ vars.BIDDING_API_URL_PROD }}" >> .env
          echo "bookingApiUrl=${{ vars.BOOKING_API_URL_PROD }}" >> .env
          echo "mapKey=${{ vars.MAP_KEY_PROD }}" >> .env
          echo "rapidKey=${{ vars.RAPID_KEY_PROD }}" >> .env
          echo "traccarApi=${{ vars.TRACCAR_API_PROD }}" >> .env
          echo "traccarUser=${{ vars.TRACCAR_USER_PROD }}" >> .env
          echo "traccarPass=${{ vars.TRACCAR_PASS_PROD }}" >> .env
          echo "routeDataApiUrl=${{ vars.ROUTE_DATA_API_URL_PROD }}" >> .env
          echo "idfyAccountId=${{ vars.IDFY_ACCOUNT_ID_PROD}}" >> .env
          echo "idfyApiKey=${{ vars.IDFY_API_KEY_PROD}}" >> .env
          echo "idfyKey_id=${{ vars.IDFY_KEY_ID_PROD }}" >> .env
          echo "idfyOu_id=${{ vars.IDF_YOU_ID_PROD }}" >> .env
          echo "idfySecret_Key=${{ vars.IDFY_SECRET_KEY_PROD }}" >> .env
          echo "webHookUrl=${{ vars.WEB_HOOK_URL_PROD }}" >> .env
          echo "installerApi=${{ vars.INSTALLER_API_PROD }}" >> .env
          echo "placeAutoCompleteProxy=${{ vars.PLACE_AUTO_COMPLETE_PROXY_PROD }}" >> .env
          echo "getUidByPhoneNumber=${{ vars.GET_UID_BY_PHONE_NUMBER_PROD }}" >> .env
          echo "getUidByMail=${{ vars.GET_UID_BY_MAIL_PROD }}" >> .env
          echo "getUid=${{ vars.GET_UID_PROD }}" >> .env
          echo "oneSignalApiKey=${{ vars.ONE_SIGNAL_API_KEY_PROD }}" >> .env
          echo "oneSignalAppId=${{ vars.ONE_SIGNAL_APP_ID_PROD }}" >> .env
          echo "fastTag=${{ vars.FAST_TAG_PROD }}" >> .env
          echo "vahanUrl=${{ vars.VAHAN_URL_PROD }}" >> .env
          echo "invoiceApiUrl=${{ vars.INVOICE_API_URL_PROD }}" >> .env
          echo "consentApiUrl=${{ vars.CONSENT_API_URL_PROD }}" >> .env
          echo "consentStatusUrl=${{ vars.CONSENT_STATUS_URL_PROD }}" >> .env
          echo "sendInviteEmailUrl=${{ vars.SEND_INVITE_EMAIL_URL_PROD }}" >> .env
          echo "razorpayorder=${{ vars.RAZOR_PAY_ORDER_PROD }}" >> .env
          echo "encryptKey=${{ vars.ENCRYPT_KEY }}" >> .env
          

      - name: Merge to branch
        run: |
          git checkout main
      - name: Print .env file
        run: cat .env

      - run: flutter pub get
      - run: flutter build web

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: web-build
          path: build/web

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SHIPPERPROD }}'
          channelId: live
          projectId: shipperprod